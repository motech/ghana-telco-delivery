<?xml version="1.0" encoding="UTF-8"?>
<project name="telco" basedir=".">
    <import file="${basedir}/tomcat-tasks.xml"/>

    <!-- *********************** DOWNLOAD ARTIFACTS************************* -->
    <target name="download.telco.from.hudson">

        <get dest="${download.dir}/${app.name}.war"
                    src="http://${hudson.server}:${hudson.port}/job/${hudson.job.name}/${hudson.build.number}/org.motechproject$ghana-telco-web/artifact/org.motechproject/ghana-telco-web/${hudson.release.version}/ghana-telco-web-${hudson.release.version}.war"/>
        <echo message="downloaded ghana-telco-web-${hudson.release.version}.war from hudson"/>
    </target>

    <target name="download.telco.from.nexus">
        <get dest="${download.dir}/${app.name}.war"
             src="http://${nexus.server}:${nexus.port}/content/repositories/releases/org/motechproject/ghana-telco/${nexus.release.version}/ghana-telco-${nexus.release.version}.war"/>
        <echo message="downloaded ghana-telco-${nexus.release.version}.war from nexus"/>
    </target>

    <!-- *************************RECREATE COUCHDB************************* -->
    <target name="drop.telco.web.db">
        <exec executable="curl">
            <arg value="-s"/>
            <arg value="-S"/>
            <arg value="-X"/>
            <arg value="DELETE"/>
            <arg value="http://${couchdb.server}:${couchdb.port}/${couchdb.telco.web.db}"/>
        </exec>
    </target>	
    
    <target name="drop.telco.billing.db">
        <exec executable="curl">
            <arg value="-s"/>
            <arg value="-S"/>
            <arg value="-X"/>
            <arg value="DELETE"/>
            <arg value="http://${couchdb.server}:${couchdb.port}/${couchdb.telco.billing.db}"/>
        </exec>
    </target>

    <target name="drop.telco.smpp.db">
        <exec executable="curl">
            <arg value="-s"/>
            <arg value="-S"/>
            <arg value="-X"/>
            <arg value="DELETE"/>
            <arg value="http://${couchdb.server}:${couchdb.port}/${couchdb.telco.smpp.db}"/>
        </exec>
    </target>


    <target name="drop.all.dbs" depends="drop.telco.web.db,drop.telco.billing.db,drop.telco.smpp.db,load.quartz.schema" description="Drop all couch db and quartz schema"/>

    <!-- *************************RECREATE postgres************************* -->
    <target name="load.quartz.schema">
        <path id="dependencies">
            <fileset file="./lib/postgres-connector-java-5.1.13.jar"/>
        </path>
        <sql driver="${postgres.driver}"
             url="jdbc:postgres://${postgres.server}:${postgres.port}:${postgres.other.db.name}?autoReconnect=true"
             userid="${postgres.user}"
             classpathref="dependencies"
             password="${postgres.password}">
            drop database ${postgres.db.name};
            create database ${postgres.db.name};
        </sql>
        <sql driver="${postgres.driver}"
             url="jdbc:postgres://${postgres.server}:${postgres.port}:${postgres.db.name}?autoReconnect=true"
             userid="${postgres.user}"
             classpathref="dependencies"
             password="${postgres.password}"
             src="./sql/tables_postgres.sql">
        </sql>
        <echo message="recreated schema for ${postgres.db.name}"/>
    </target>
    <!-- *************************SET PROPERTIES************************* -->
    <target name="set.hudson.version">
        <echo file="${tomcat.home}/webapps/${app.name}/META-INF/version.txt">
            hudson.release.version=${hudson.release.version}
            hudson.build.number=${hudson.build.number}
            deploy.time=${cctimestamp}
        </echo>
    </target>
    <target name="set.nexus.version">
        <echo file="${tomcat.home}/webapps/${app.name}/META-INF/version.txt">
            nexus.server=${nexus.server}
            nexus.release.version=${nexus.release.version}
            deploy.time=${cctimestamp}
        </echo>
    </target>

    <target name="set.properties">
        <copy overwrite="true" todir="${tomcat.home}/webapps/${app.name}/WEB-INF/classes"
              file="${basedir}/properties/${env}/couchdb.properties"/>
        <copy overwrite="true" todir="${tomcat.home}/webapps/${app.name}/WEB-INF/classes"
	              file="${basedir}/properties/${env}/smpp.properties"/>
        <copy overwrite="true" todir="${tomcat.home}/webapps/${app.name}/WEB-INF/classes"
              file="${basedir}/properties/${env}/date.properties"/>
        <copy overwrite="true" todir="${tomcat.home}/webapps/${app.name}/WEB-INF/classes"
              file="${basedir}/properties/${env}/quartz.properties"/>
        <copy overwrite="true" todir="${tomcat.home}/webapps/${app.name}/WEB-INF/classes"
              file="${basedir}/properties/${env}/log4j.xml"/>
    </target>

    <!-- ************************LOAD SEED DATA ************************* -->
    <path id="lib.path">
        <fileset dir="${tomcat.home}/webapps/${app.name}/WEB-INF/lib" includes="**/*.jar"/>
    </path>

    <target name="load.seed.data">
        <echo message="please wait ..."/>
        <java fork="false" classname="${couchdb.seed.main.class}">
            <classpath>
                <path location="${tomcat.home}/webapps/${app.name}/WEB-INF/classes"/>
                <path refid="lib.path"/>
            </classpath>
        </java>
        <echo message="seed data loaded into ${couchdb.telco.web.db} database"/>
    </target>

    <!-- *************************DEPLOY TARGETS************************* -->
    <target name="deploy.telco.from.hudson.and.reset.db" depends="stop.tomcat,
             			         drop.all.dbs,
								 download.telco.from.hudson,
								 copy.telco.to.tomcat,
								 start.tomcat, 	
								 set.properties,
								 set.hudson.version,
								 load.seed.data,
								 restart.tomcat"
            description="Deploy telco by
                         1) fetching artifact from hudson, 
                         2) recreate telco-web couchdb database with seed data
                         3) clearing quartz postgres jobdatastore
			 4) set properties for war"/>

    <target name="deploy.telco.from.nexus.and.reset.db" depends="stop.tomcat,
                                drop.all.dbs,
								download.telco.from.nexus,
								copy.telco.to.tomcat,
								start.tomcat, 
								set.properties,
								set.nexus.version,
								 load.seed.data,
								restart.tomcat"
            description="Deploy telco by
                         1) fetching artifact from nexus, 
                         2) recreate telco-web couchdb database with seed data
                         3) clearing quartz postgres jobdatastore
                         4) set properties for war"/>

    <target name="deploy.telco.from.hudson" depends="stop.tomcat,
 						    download.telco.from.hudson,
						    copy.telco.to.tomcat,
						    start.tomcat, 						   
					        set.properties,
						    set.hudson.version,
						    load.seed.data,
						    restart.tomcat"
            description="Deploy telco from hudson without recreating database and seed data"/>

    <target name="deploy.telco.from.nexus" depends="stop.tomcat,
						   download.telco.from.nexus,
						   copy.telco.to.tomcat,
 						   start.tomcat, 						 
					       set.properties,
						   set.nexus.version,
						   load.seed.data,
						   restart.tomcat"
            description="Deploy telco from nexus without recreating database and seed data"/>

    <target name="deploy.telco.from.local" depends="stop.tomcat,
					  	   copy.local.war,
 						   start.tomcat, 						
					       set.properties,
					       load.seed.data,
						   restart.tomcat"
            description="Deploy telco from locally downloaded war(set 'local.war.file' in deploy.properties) in artifacts folder without recreating database and seed data"/>

    <target name="deploy.telco.from.local.and.reset.db" depends="stop.tomcat,
                           drop.all.dbs,
					  	   copy.local.war,
 						   start.tomcat,						  
					       set.properties,
						   load.seed.data,
						   restart.tomcat"
            description="Deploy telco from locally downloaded war(set 'local.war.file' in deploy.properties) in artifacts folder. Also recreates the telco database."/>


     <!-- Delivery App Targets -->

    <target name="download.telco.delivery.from.hudson">
        <get dest="${download.dir}/${delivery.app.name}.war"
             src="http://${hudson.server}:${hudson.port}/view/ghana-telco/job/Ghana-Telco-Delivery/lastSuccessfulBuild/org.motechproject.telco$telco-batch/artifact/org.motechproject.telco/telco-batch/${nexus.telco.delivery.release.version}/telco-batch-${nexus.telco.delivery.release.version}.war"/>
        <echo message="downloaded ghana-telco-delivery-${nexus.telco.delivery.release.version}.war from nexus"/>
    </target>

    <target name="set.telco.delivery.properties">
        <copy overwrite="true" todir="${tomcat.home}/webapps/${delivery.app.name}/WEB-INF/classes"
              file="${basedir}/properties/${env}/delivery/batch-default.properties"/>
        <copy overwrite="true" todir="${tomcat.home}/webapps/${delivery.app.name}/WEB-INF/classes"
              file="${basedir}/properties/${env}/delivery/messages.properties"/>
        <copy overwrite="true" todir="${tomcat.home}/webapps/${delivery.app.name}/WEB-INF/classes"
              file="${basedir}/properties/${env}/delivery/log4j.xml"/>
    </target>

    <target name="set.telco.delivery.nexus.version">
        <echo file="${tomcat.home}/webapps/${delivery.app.name}/META-INF/version.txt">
            nexus.server=${nexus.server}
            nexus.release.version=${nexus.telco.delivery.release.version}
            deploy.time=${cctimestamp}
        </echo>
    </target>

    <target name="deploy.telco.delivery.from.hudson" depends="stop.tomcat,
						   download.telco.delivery.from.hudson,
						   copy.telco.delivery.to.tomcat,
 						   start.tomcat,
					       set.telco.delivery.properties,
						   set.telco.delivery.nexus.version,
						   restart.tomcat"
            description="Deploy telco from nexus without recreating database and seed data"/>
</project>
